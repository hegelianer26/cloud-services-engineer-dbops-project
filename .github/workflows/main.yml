name: Main workflow
on:
  push:
    branches:
      - main
jobs:
  migrate:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5  

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '11'

    # Загружаем и устанавливаем Flyway, чтобы можно было использовать его для управления миграциями
    - name: Install Flyway
      run: |
        curl -L -o flyway-commandline.tar.gz "https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/11.1.0/flyway-commandline-11.1.0-linux-x64.tar.gz"
        tar -xzf flyway-commandline.tar.gz
        sudo ln -s $PWD/flyway-11.1.0/flyway /usr/local/bin/flyway

    # Проверяем, что Postgres работает и доступен перед выполнением миграций, чтобы избежать ошибок подключения
    - name: Wait for Postgres
      run: until pg_isready -h localhost -p 5432; do sleep 1; done


    # Выполняем миграции с помощью Flyway, используя URL подключения и учётные данные для базы данных
    - name: Run Flyway migrations
      env:
        FLYWAY_URL: jdbc:postgresql://${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}
        FLYWAY_USER: ${{ secrets.DB_USER }}
        FLYWAY_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: flyway migrate -locations=filesystem:migrations

    ### Этот шаг оставьте без изменений
    - name: Download and setup autotests binaries
      run: |
        wget -qO- cloud-services-engineer.gitlab.yandexcloud.net/practicum-cloud-services/dbops-autotests/-/package_files/1/download > dbopstest
        chmod +x ./dbopstest
        mv ./dbopstest /usr/local/bin/dbopstest

    ### Этот шаг оставьте без изменений
    - name: Test
      run: |
        dbopstest \
          -test.v \
          -host=${{ secrets.DB_HOST }} \
          -port=${{ secrets.DB_PORT }} \
          -user=${{ secrets.DB_USER }} \
          -password=${{ secrets.DB_PASSWORD }} \
          -db=${{ secrets.DB_NAME }}
  


    
